// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package bookings

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

type Querier interface {
	// Booking CRUD operations
	CreateBooking(ctx context.Context, db DBTX, arg CreateBookingParams) (Booking, error)
	// Booking seats operations (future feature)
	CreateBookingSeat(ctx context.Context, db DBTX, arg CreateBookingSeatParams) (BookingSeat, error)
	// Payment operations
	CreatePayment(ctx context.Context, db DBTX, arg CreatePaymentParams) (Payment, error)
	DeleteBooking(ctx context.Context, db DBTX, bookingID uuid.UUID) error
	DeleteBookingSeats(ctx context.Context, db DBTX, bookingID uuid.UUID) error
	GetBookingByID(ctx context.Context, db DBTX, bookingID uuid.UUID) (Booking, error)
	GetBookingByIdempotencyKey(ctx context.Context, db DBTX, idempotencyKey sql.NullString) (Booking, error)
	GetBookingByReference(ctx context.Context, db DBTX, bookingReference string) (Booking, error)
	GetBookingSeat(ctx context.Context, db DBTX, bookingSeatID uuid.UUID) (BookingSeat, error)
	GetBookingSeats(ctx context.Context, db DBTX, bookingID uuid.UUID) ([]BookingSeat, error)
	GetBookingSeatsCount(ctx context.Context, db DBTX, bookingID uuid.UUID) (int64, error)
	GetBookingWithPayment(ctx context.Context, db DBTX, bookingID uuid.UUID) (GetBookingWithPaymentRow, error)
	GetBookingsForCleanup(ctx context.Context, db DBTX) ([]Booking, error)
	GetEventBookings(ctx context.Context, db DBTX, arg GetEventBookingsParams) ([]Booking, error)
	GetEventPayments(ctx context.Context, db DBTX, arg GetEventPaymentsParams) ([]Payment, error)
	GetEventWaitlist(ctx context.Context, db DBTX, arg GetEventWaitlistParams) ([]Waitlist, error)
	GetExpiredBookings(ctx context.Context, db DBTX, limit int32) ([]Booking, error)
	GetExpiredWaitlistOffers(ctx context.Context, db DBTX) ([]Waitlist, error)
	GetNextWaitlistEntries(ctx context.Context, db DBTX, arg GetNextWaitlistEntriesParams) ([]Waitlist, error)
	GetOfferedWaitlistEntries(ctx context.Context, db DBTX) ([]Waitlist, error)
	GetPaymentByBookingID(ctx context.Context, db DBTX, bookingID uuid.UUID) (Payment, error)
	GetPaymentByGatewayTransactionID(ctx context.Context, db DBTX, gatewayTransactionID sql.NullString) (Payment, error)
	GetPaymentByID(ctx context.Context, db DBTX, paymentID uuid.UUID) (Payment, error)
	GetPaymentsForAnalytics(ctx context.Context, db DBTX, arg GetPaymentsForAnalyticsParams) ([]GetPaymentsForAnalyticsRow, error)
	GetSeatsBySection(ctx context.Context, db DBTX, arg GetSeatsBySectionParams) ([]BookingSeat, error)
	GetUserBookings(ctx context.Context, db DBTX, arg GetUserBookingsParams) ([]Booking, error)
	GetUserBookingsCount(ctx context.Context, db DBTX, userID uuid.UUID) (int64, error)
	GetUserPaymentHistory(ctx context.Context, db DBTX, arg GetUserPaymentHistoryParams) ([]GetUserPaymentHistoryRow, error)
	GetUserPayments(ctx context.Context, db DBTX, arg GetUserPaymentsParams) ([]Payment, error)
	GetUserWaitlistEntry(ctx context.Context, db DBTX, arg GetUserWaitlistEntryParams) (Waitlist, error)
	GetWaitlistEntry(ctx context.Context, db DBTX, waitlistID uuid.UUID) (Waitlist, error)
	GetWaitlistEntryByUserAndEvent(ctx context.Context, db DBTX, arg GetWaitlistEntryByUserAndEventParams) (Waitlist, error)
	GetWaitlistPosition(ctx context.Context, db DBTX, arg GetWaitlistPositionParams) (GetWaitlistPositionRow, error)
	GetWaitlistStats(ctx context.Context, db DBTX, eventID uuid.UUID) (GetWaitlistStatsRow, error)
	// Waitlist operations
	JoinWaitlist(ctx context.Context, db DBTX, arg JoinWaitlistParams) (Waitlist, error)
	RemoveFromWaitlist(ctx context.Context, db DBTX, arg RemoveFromWaitlistParams) error
	ReorderWaitlistAfterRemoval(ctx context.Context, db DBTX, arg ReorderWaitlistAfterRemovalParams) error
	UpdateBookingPaymentStatus(ctx context.Context, db DBTX, arg UpdateBookingPaymentStatusParams) (Booking, error)
	UpdateBookingSeatStatus(ctx context.Context, db DBTX, arg UpdateBookingSeatStatusParams) (BookingSeat, error)
	UpdateBookingStatus(ctx context.Context, db DBTX, arg UpdateBookingStatusParams) (Booking, error)
	UpdatePaymentStatus(ctx context.Context, db DBTX, arg UpdatePaymentStatusParams) (Payment, error)
	UpdatePaymentTicketURL(ctx context.Context, db DBTX, arg UpdatePaymentTicketURLParams) (Payment, error)
	UpdateWaitlistStatus(ctx context.Context, db DBTX, arg UpdateWaitlistStatusParams) (Waitlist, error)
}

var _ Querier = (*Queries)(nil)
